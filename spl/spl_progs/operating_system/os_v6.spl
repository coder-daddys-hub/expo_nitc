//Cette version du OS Start up est la modification de la version d'origine. On y ajoute les structures de données pour le IDLE process et on modifie celles pour le programme INIT qui est maintenant écrit avec ExpL language

loadi(63,13);
loadi(64,14);
loadi(65,7);
loadi(66,8);
loadi(69,11);
loadi(70,12);
loadi(22,35);
loadi(23,36);
loadi(2,15);
loadi(3,16);
loadi(4,17);
loadi(5,18);
loadi (16,29);
loadi (17,30);

// ***** IDLE **********
PTBR = PAGE_TABLE_BASE;
PTLR = 10;
//Library
[PTBR+0] = -1;      //IDLE program does not need the library so no need to load it
[PTBR+1] = "0000";
[PTBR+2] = -1;
[PTBR+3] = "0000";
//Heap
[PTBR+4] = -1;      //The IDLE program does not need a heap as it does not perform dynamic memory allocation
[PTBR+5] = "0000";
[PTBR+6] = -1;
[PTBR+7] = "0000";      
//Code
[PTBR+8]  = 69;     //Only two pages needed for the code of IDLE program
[PTBR+9]  = "0100";	//Code should be read only
[PTBR+10] = 70;
[PTBR+11] = "0100";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";
//Stack
[PTBR+16] = 81;
[PTBR+17] = "0110";
[PTBR+18] = -1;
[PTBR+19] = "0000";

[PROCESS_TABLE + 1] = 0;                //PID
[PROCESS_TABLE + 4] = CREATED;          //STATE
[PROCESS_TABLE + 11] = 82;              //USER AREA PAGE NUMBER
[PROCESS_TABLE + 12] = 0;               //KERNEL STACK POINTER (KPTR)
[PROCESS_TABLE + 13] = 8*512;           //USER STACK POINTER (UPTR)
[PROCESS_TABLE + 14] = PAGE_TABLE_BASE;            //PAGE TABLE REGISTER (PTBR)
[PROCESS_TABLE + 15] = 10;              //PAGE TABLE LENGTH REGISTER (PTLR)
[81*512] = [69 * 512 + 1];

// ***** INIT **********
PTBR = PAGE_TABLE_BASE + 20;

//Library
[PTBR+0] = 63;
[PTBR+1] = "0100";
[PTBR+2] = 64;
[PTBR+3] = "0100";
//Heap
[PTBR+4] = 78;
[PTBR+5] = "0110";
[PTBR+6] = 79;
[PTBR+7] = "0110";
//Code
[PTBR+8]  = 65;
[PTBR+9]  = "0100";
[PTBR+10] = 66;
[PTBR+11] = "0100";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";
//Stack
[PTBR+16] = 76;
[PTBR+17] = "0110";
[PTBR+18] = 77;
[PTBR+19] = "0110";

[PROCESS_TABLE + 16 + 1] = 1;                   //PID
[PROCESS_TABLE + 16 + 4] = RUNNING;             //STATE
[PROCESS_TABLE + 16 + 11] = 80;                 //USER AREA PAGE NUMBER
[PROCESS_TABLE + 16 + 12] = 0;                  //KERNEL STACK POINTER (KPTR)
[PROCESS_TABLE + 16 + 13] = 8*512;              //USER STACK POINTER (UPTR)
[PROCESS_TABLE + 16 + 14] = PAGE_TABLE_BASE + 20; //PAGE TABLE REGISTER (PTBR)
[PROCESS_TABLE + 16 + 15] = 10;               //PAGE TABLE LENGTH REGISTER (PTLR)
[76*512] = [65 * 512 + 1];

[SYSTEM_STATUS_TABLE + 1] = 1;  //PID of active process
SP = 8*512;
ireturn;